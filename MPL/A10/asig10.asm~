section .data
ff1: db "%lf +i%lf",10
ff2: db "%lf +i%lf",10
formatpi: db "%d",10
formatpf: db "%lf",10
formatsf: db "%lf",10
four: dq 4
two: dq 2
msg1: db "Root1 :",0x0A
len1: equ $-msg1
msg2: db "Root2 :",0x0A
len2: equ $-msg2


section .bss

a: resb 10
b: resb 10
c: resb 10
bsqr: resb 10
ac4: resb 10
det: resb 10
a2: resb 10
root1: resb 10
root2: resb 10
detsqrt: resb 10
real: resb 10
img: resb 10

%macro myprintf 1
mov rdi,formatpf
sub rsp,8
movsd xmm0,[%1]
mov rax,1
call printf
add rsp,8
%endmacro

%macro myscanf 1
mov rdi,formatsf
mov rax,0
sub rsp,8
mov rsi,rsp
call scanf
mov r8,qword[rsp]
mov qword[%1],8
add rsp,8
%endmacro

%macro scall 4
mov rax,%1
mov rdi,%2
mov rsi,%3
mov rdx,%4
syscall
%endmacro


section .text
global main
main:

extern printf
extern scanf

myscanf a
myscanf b
myscanf c

finit
fldz
fadd qword[b]
fmul st0

fstp qword[bsqr]

fldz
fadd qword[four]
fmul qword[a]
fmul qword[b]

fstp qword[ac4]

fldz
fadd qword[bsqr]
fsub qword[ac4]
fstp qword[det]

fldz
fadd qword[a]
fadd qword[a]
fstp qword[a2]

bt qword[det],63
jc imaginary

fldz
fadd qword[det]
fsqrt
fstp qword[detsqrt]

fldz
fsub qword[b]
fadd qword[detsqrt]
fstp qword[root1]

fldz
fsub qword[b]
fsub qword[detsqrt]
fstp qword[root2]

scall 1,1,msg1,len1
myprintf root1
scall 1,1,msg2,len2
myprintf root2

mov rax,60
mov rdi,0
syscall

imaginary:

fldz
fadd qword[det]
fsqrt
fstp qword[detsqrt]

fldz
fsub qword[b]
fdiv qword[a2]
fstp qword[real]

fldz
fadd qword[detsqrt]
fdiv qword[a2]
fstp qword[img]

scall 1,1,msg1,len1

mov rdi,ff1
sub rsp,8
movsd xmm0,[real]
movsd xmm1,[img]
mov rax,2
call printf
add rsp,8

scall 1,1,msg2,len2

mov rdi,ff2
sub rsp,8
movsd xmm0,[real]
movsd xmm1,[img]
mov rax,2
call printf
add rsp,8

mov rax,60
mov rdi,0
syscall



